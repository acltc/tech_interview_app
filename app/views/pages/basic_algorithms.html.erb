<!-- Panel (Banner) -->
<section class="panel banner right">
	<div class="content color0 span-3-75">
		<h1 class="major">Basic Algorithms</h1>
		<p>Basic algorithms are the building blocks for many technical interviews. They typically involve loops, conditionals, strings, arrays, and hashes or a combination thereof. Practicing these will equip you to do well in many styles of the tech interview which are covered in other topics. So start here!</p>
		<ul class="actions">
			<li><a href="/" class="button primary">Back</a></li>
			<!-- <li><a href="#first" class="button primary color1 circle icon fa-angle-right">Next</a></li> -->
		</ul>
	</div>
</section>

<!-- Panel -->
<section class="panel color1" id="first">
	<div class="intro joined">
		<h2 class="major">Exercises</h2>
		<p>We've broken down the basic algorithm exercises into various subtopics: Arrays, Strings, and Hashes.</p>
	</div>
	<div class="inner">
		<ul class="grid-icons three connected">
			<li><span class="icon fa-ellipsis-h"><span class="label">Arrays</span></span></li>
			<li><span class="icon fa-quote-right"><span class="label">Strings</span></span></li>
			<li><span class="icon fa-code"><span class="label">Hashes</span></span></li>
		</ul>
	</div>
</section>

<!-- Panel -->
<section class="panel color2-alt">
	<div class="intro color2">
		<h2 class="major">Arrays</h2>
		<p>Array-based exercises aren't really about arrays. They're about <em>loops</em>. That is, to access or modify data from an array, you need to be comfortable in knowing how to iterate through one properly. These exercises will help you strengthen that ability. For all of the exercises, avoid using the built-in methods that solve the exercise automatically (e.g. 'max', 'reverse').</p>
	</div>
	<div class="inner columns divided">
		<div class="span-2">
			<h3 class="major">Exercise #1</h3>
			<p>Write a function that returns the sum of all numbers in a given array.</p>
			<h4>Sample Input</h4>
			<pre>[1, 2, 3, 4]</pre>
			<h4>Sample Output</h4>
			<pre>10</pre>
		</div>
		<div class="span-2">
			<h3 class="major">Exercise #2</h3>
			<p>Write a function that returns the greatest value in a given array of numbers.</p>
			<h4>Sample Input</h4>
			<pre>[5, 17, -1, 10, 4]</pre>
			<h4>Sample Output</h4>
			<pre>17</pre>
		</div>
		<div class="span-2">
			<h3 class="major">Exercise #3</h3>
			<p>Write a function that takes a given array of numbers and returns a new array containing all values of the original array that are less than 100.</p>
			<h4>Sample Input</h4>
			<pre>[99, 101, 88, 4, 2000, 50]</pre>
			<h4>Sample Output</h4>
			<pre>[99, 88, 4, 50]</pre>
		</div>
		<div class="span-2">
			<h3 class="major">Exercise #4</h3>
			<p>Write a function that takes a given array of numbers and returns a new array whose values are each doubled from the original array.</p>
			<h4>Sample Input</h4>
			<pre>[2, 3, 1, 99, -4]</pre>
			<h4>Sample Output</h4>
			<pre>[4, 6, 2, 198, -8]</pre>
		</div>
		<div class="span-2">
			<h3 class="major">Exercise #5</h3>
			<p>Write a function that returns a new array with the values of the original array in reverse.</p>
			<h4>Sample Input</h4>
			<pre>[6, -3, 0, 1, 100]</pre>
			<h4>Sample Output</h4>
			<pre>[100, 1, 0, -3, 6]</pre>
		</div>
		<div class="span-2">
			<h3 class="major">Exercise #6</h3>
			<p>Write a function that returns the product of all numbers in a given array. (The product is what you get when you multiply numbers together.)</p>
			<h4>Sample Input</h4>
			<pre>[1, 2, 3, 4]</pre>
			<h4>Sample Output</h4>
			<pre>24</pre>
		</div>
		<div class="span-2">
			<h3 class="major">Exercise #7</h3>
			<p>You are given an array containing all numbers 1 through 10 in random order. However, one of the values is missing. Write a function to find the missing number.</p>
			<h4>Sample Input</h4>
			<pre>[8, 1, 2, 9, 4, 7, 6, 3, 10]</pre>
			<h4>Sample Output</h4>
			<pre>5</pre>
		</div>
	</div>
</section>

<!-- Panel -->
<section class="panel color4-alt">
	<div class="intro color4">
		<h2 class="major">Strings</h2>
		<p>The secret to most string-based exercises is to realize that strings are just another form of an array. That is, a string is simply a list of characters! Every language has tools to allow you to iterate through each character of a string just as if it were an array. In fact, you can even check an index of a string the same way as an array (e.g. string[0])."</p>
	</div>
	<div class="inner columns divided">
		<div class="span-2">
			<h3 class="major">Exercise #1</h3>
			<p>Write a function that accepts a string and returns its reverse.</p>
			<h4>Sample Input</h4>
			<pre>"abcde"</pre>
			<h4>Sample Output</h4>
			<pre>"edcba"</pre>
		</div>
		<div class="span-2">
			<h3 class="major">Exercise #2</h3>
			<p>Write a function that returns true or false depending on whether the $ character is contained within a given string.</p>
			<h4>Sample Input</h4>
			<pre>"i hate $ but i love money i know i know i'm crazy"</pre>
			<h4>Sample Output</h4>
			<pre>true</pre>
		</div>
		<div class="span-2">
			<h3 class="major">Exercise #3</h3>
			<p>Write a function that accepts a string and returns a new string that has every other letter capitalized.</p>
			<h4>Sample Input</h4>
			<pre>"hello, how are your porcupines today?"</pre>
			<h4>Sample Output</h4>
			<pre>"hElLo, HoW ArE YoUr pOrCuPiNeS ToDaY?"</pre>
		</div>
		<div class="span-2">
			<h3 class="major">Exercise #4</h3>
			<p>Write a function that finds the first occurence of two duplicate characters in a row and returns that character.</p>
			<h4>Sample Input</h4>
			<pre>"heracwopaqianatzzrpos"</pre>
			<h4>Sample Output</h4>
			<pre>"z"</pre>
		</div>
		<div class="span-2">
			<h3 class="major">Exercise #5</h3>
			<p>Write a function that reverses the words of a string.</p>
			<h4>Sample Input</h4>
			<pre>"popcorn is so cool isn't it yeah i thought so"</pre>
			<h4>Sample Output</h4>
			<pre>"so thought i yeah it isn't cool so is popcorn"</pre>
		</div>
		<div class="span-2">
			<h3 class="major">Exercise #6</h3>
			<p>Write a function that returns true or false depending on whether a given string is a palindrome. (A palindrome is a word phrase that reads the same way backwards and forwards.)</p>
			<h4>Sample Input</h4>
			<pre>"racecar"</pre>
			<h4>Sample Output</h4>
			<pre>true</pre>
		</div>
		<div class="span-2">
			<h3 class="major">Exercise #7</h3>
			<p>Write a function that capitalizes all the letter "e"â€™s in a string.</p>
			<h4>Sample Input</h4>
			<pre>"wait what are you doing are you capitalizing all my e's no please stop please stop no"</pre>
			<h4>Sample Output</h4>
			<pre>"wait what arE you doing arE you capitalizing all my E's no plEasE stop plEasE stop no"</pre>
		</div>
	</div>
</section>

<!-- Panel -->
<section class="panel color3-alt">
	<div class="intro color3 span-6">
		<h2 class="major">Hashes</h2>
		<p>The hash is the Swiss Army Knife of data structures in that it has so many uses. However, its most common use in basic algorithm questions is to allow for quick data lookup. </p>
		<p>For example, if I wanted to keep track of how many cans of Coke and Pepsi I drank this past month, I have two choices. I can use an array to keep a tally for each time I drink:	</p>
		<pre>["Coke", "Coke", "Pepsi", "Pepsi", "Pepsi", "Coke", "Pepsi"]</pre>
		<p>Or, I can simply use a hash:</p>
		<pre>{"Coke" => 3, "Pepsi" => 4}</pre>
		<p>With the array, to get the final count I'd have to ask the computer to manually count the instances of "Coke" and "Pepsi". With the hash, however, the data is right there in front of us, so the computer can look of the values of "Coke" and "Pepsi" in a single step.</p>
		<p>Most of the following exercises can be solved <em>without</em> hashes, but use hashes to make your code more efficient.</p>
	</div>
	<div class="inner columns divided">
		<div class="span-2">
			<h3 class="major">Exercise #1</h3>
			<p>A given array has one pair of duplicate values. Write a function to return the duplicate value.</p>
			<h4>Sample Input</h4>
			<pre>[5, 1, 9, 4, 1, 7]</pre>
			<h4>Sample Output</h4>
			<pre>1</pre>
		</div>
		<div class="span-2">
			<h3 class="major">Exercise #2</h3>
			<p>Write a function that returns true or false depending on whether two given strings are anagrams of each other. (An anagram is when two words share the same letters but have a different order.)</p>
			<h4>Sample Input</h4>
			<pre>"silent", "listen"</pre>
			<h4>Sample Output</h4>
			<pre>true</pre>
		</div>
		<div class="span-2">
			<h3 class="major">Exercise #3</h3>
			<p>A given string contains all the letters from the alphabet except for one. Write a function that returns the missing letter.</p>
			<h4>Sample Input</h4>
			<pre>"The quick brown box jumps over a lazy dog."</pre>
			<h4>Sample Output</h4>
			<pre>"f"</pre>
		</div>
		<div class="span-2">
			<h3 class="major">Exercise #4</h3>
			<p>Write a function that finds the most frequent character within a given string.</p>
			<h4>Sample Input</h4>
			<pre>"peter piper picked a peck of pickled peppers."</pre>
			<h4>Sample Output</h4>
			<pre>"p"</pre>
		</div>
		<div class="span-2">
			<h3 class="major">Exercise #5</h3>
			<p>Write a function that accepts two arrays and returns a third array containing the values shared by both arrays.</p>
			<h4>Sample Input</h4>
			<pre>[1, 2, 3, 4, 5], [1, 3, 5, 7, 9]</pre>
			<h4>Sample Output</h4>
			<pre>[1, 3, 5]</pre>
		</div>
		<div class="span-2">
			<h3 class="major">Exercise #6</h3>
			<p>Write a function that accepts two arrays and determines whether one is a subset of the other. It is considered a subset if <em>all</em> the values in one array are contained within the other.</p>
			<h4>Sample Input</h4>
			<pre>[1, 2, 3, 4, 5, 6, 7, 8], [6, 3, 1]</pre>
			<h4>Sample Output</h4>
			<pre>true</pre>
		</div>
		<div class="span-2">
			<h3 class="major">Exercise #7</h3>
			<p>Write a function that accepts a hash and converts it into a simple flat array containing all the keys and values.</p>
			<h4>Sample Input</h4>
			<pre>{"a" => 1, "b" => 2, "c" => 3, "d" => 4}</pre>
			<h4>Sample Output</h4>
			<pre>["a", 1, "b", 2, "c", 3, "d", 4]</pre>
		</div>
	</div>
</section>

<!-- Copyright -->
<div class="copyright">&copy; Design: <a href="https://html5up.net">HTML5 UP</a>.</div>